Key Concepts:

Git Branching: Created feature branches to develop and test new features, keeping the main branch clean and stable.
Feature Development: Added a feature in a new branch and committed multiple changes to track progress.
Git Revert and Reset: Used git revert to undo unwanted changes while keeping the history intact.
Git Rebase vs. Merge: Practiced both merging and rebasing branches, learning when to maintain a clean history or keep full commit logs.


git checkout -b <branch_name>: Create a new branch and switch to it.
git commit -m "commit message": Save changes with a descriptive message.
git push origin <branch_name>: Push local commits to the remote repository.
git revert <commit_hash>: Undo a specific commit by creating a new commit that reverses it.
git reset --hard <commit_hash>: Reset the current branch to a specific commit, discarding all changes.
git merge <branch_name>: Merge changes from the specified branch into the current branch.
git rebase <branch_name>: Reapply commits from one branch onto another, creating a linear history.
git status: Check the status of the working directory and staging area.
git log --oneline --graph: View the commit history in a simplified graphical format.
git branch: List all branches in the repository.
